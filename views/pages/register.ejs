<% if (props.messages.length > 0) { %>
  <div class="alert alert-danger"><%-props.messages.join('<br>')%></div>
<% } %>

<form method="post" autocomplete="off">
  <fieldset>
    <div class="form-group row">
      <label for="inputName" class="col-md-2 col-form-label"><%= t('username') %></label>
      <div class="col-md-5">
        <input
          class="form-control"
          id="inputName"
          type="text"
          name="username"
          value="<%=props.values.username%>"
          required
          maxlength="<%=App.config.accounts.maxUsername%>"
          pattern="<%=App.config.accounts.regex.source%>"
          autofocus
          oninput="checkUsername()"
        >
        <small><%= t('usernameNote', {minUsername: App.config.accounts.minUsername}) %>
        <span id="msg-span" style="margin-left:12px;font-size:13px;vertical-align:-1px;"></span></small>
      </div>
    </div>
    <% if (App.config.autoPassword && App.config.allowNewAutoPassword) { %>
      <div class="form-group row" style="margin-top:32px;">
        <label class="col-md-2 col-form-label"></label>
        <div class="col-md-5">
          <p>Dein Passwort wird automatisch erzeugt und in diesem Browser gespeichert. Gehe in dein Profil, um ein eigenes Passwort zu setzen.
          </p>
        </div>
      </div>
    <% } %>
    <div class="form-group row <%= App.config.autoPassword && App.config.allowNewAutoPassword ? 'd-none' : '' %>">
      <label for="inputPw1" class="col-md-2 col-form-label"><%= t('password') %></label>
      <div class="col-md-5">
        <input
          class="form-control"
          id="inputPw1"
          type="password"
          name="pw1"
          value="<%=props.values.pw1%>"
          required
          maxlength="<%=App.config.accounts.maxPw%>"
        >
      </div>
    </div>
    <div class="form-group row <%= App.config.autoPassword && App.config.allowNewAutoPassword ? 'd-none' : '' %>">
      <label for="inputPw2" class="col-md-2 col-form-label"><%= t('repeatPassword') %></label>
      <div class="col-md-5">
        <input
          class="form-control"
          id="inputPw2"
          type="password"
          name="pw2"
          value="<%=props.values.pw2%>"
          required
          maxlength="<%=App.config.accounts.maxPw%>"
        >
        <small><%= t('passwordNote', {minPassword: App.config.accounts.minPw}) %></small>
      </div>
    </div>
    <div class="form-group row">
      <div class="col-md-5 offset-md-2">
        <p style="margin-top:8px;margin-bottom:32px;">
          <%- t('noteOn_', {link: `<a href="${prefix}/privacy">${ t('dataProtection') }</a>`}) %>.
        </p>
        <button type="submit" class="btn btn-success" id="submit-button"><%= t('submit') %></button>
      </div>
    </div>
    <input type="hidden" name="csrf" value="<%=props.token%>"/>
    <input type="hidden" name="room" value="<%=props.room%>" />
  </fieldset>
</form>


<script>
  var state = {
    msg: '',
    class: 'text-danger'
  }
  
  const msgSpan = document.getElementById('msg-span')
  const nameInput = document.getElementById('inputName')
  const submitButton = document.getElementById('submit-button')
  
  function render() {
    msgSpan.innerHTML = state.msg
    msgSpan.className = state.class
  }
  
  function checkUsername() {
    const name = nameInput.value.trim()
    if (name.length == 0) {
      state.msg = ''
      state.class = 'text-danger'
    } else if (name.length < <%= App.config.accounts.minUsername %>) {
      state.msg = 'Benutzername zu kurz'
      state.class = 'text-danger'
    } else if (!/<%=App.config.accounts.regex.source%>/.test(name)) {
      state.msg = 'Benutzername enthält ungültige Zeichen'
      state.class = 'text-danger'
    } else {
      state.msg = 'wird geprüft ...'
      state.class = 'text-secondary'
      
      const xhr = new XMLHttpRequest();
      xhr.open('GET', '/check/' + encodeURIComponent(name));
      xhr.onload = function() {
        if (xhr.status === 200) {
          if (xhr.responseText === nameInput.value.trim()) {
            state.msg = '✓ verfügbar'
            state.class = 'text-info'
            render()
            <% if (App.config.autoPassword && App.config.allowNewAutoPassword) { %>
              let pw = ''
              for (let i = 0; i < 32; i++) {
                pw += Math.floor(10*Math.random()).toString()
              }
              document.getElementById('inputPw1').value = pw
              document.getElementById('inputPw2').value = pw
              sessionStorage.setItem('htw_temp_local_user', JSON.stringify({name:name, password: pw}))
            <% } %>
          } else if (xhr.responseText === '²bad²') {
            state.msg = 'Benutzername bereits vergeben'
            state.class = 'text-danger'
            render()
          } else {
            console.log('Something went wrong!');
          }
        } else {
          console.log('Request failed. Returned status of ' + xhr.status);
        }
      };
      xhr.send();
    }
    render()
  }
  
  render()

</script>
